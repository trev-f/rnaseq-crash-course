# Quantify reads within genes

## Objectives

- Generate table of counts within genes

## Purpose

Counting reads transforms the sequencing data that we have been processing into quantities that we can readily analyze.

## Overview of counting workflow

```{mermaid}
flowchart LR
    ref_annotations[(Reference\nAnnotations)]
    mappings[(Mappings)]
    counts_table[(Counts\ntable)]
    count_reads{featureCounts}

    mappings --- count_reads
    ref_annotations --- count_reads
    count_reads --> counts_table

    counts_summary[(Counts\nsummary)]
    multiqc{MultiQC}
    counts_qc_report((("Counts\nQC\nreport")))

    count_reads --> counts_summary
    counts_summary --- multiqc --> counts_qc_report
```

## Scripts

### Link files

We count reads that have been mapped to the reference genome.
Therefore, we create links to our mappings files that are located in the mappings directory of the read mapping step.

We also need the reference gene annotations in GTF format.
We downloaded this in the read mapping step, so we will like in that file as well.

``` {.bash filename="link_files.sh"}
#!/usr/bin/env bash

# Set constants
# make a directory to hold links to trimmed reads
readonly mappings_dir="data/mappings"
readonly references_dir="data/references"

mkdir -p "${mappings_dir}" "${references_dir}"

# make links to mappings
ln -rs ../03_map_reads/data/mappings/*.bam "${mappings_dir}"
# make link to reference GTF file
ln -rs ../03_map_reads/data/references/GCF_002263795.3_ARS-UCD2.0_genomic.gtf.gz "${references_dir}"
```

### Count reads

``` {.bash filename="count_reads.sh"}
#!/bin/bash

#SBATCH --job-name=generate_genome_index
#SBATCH --cpus-per-task=8
#SBATCH --mem=16GB
#SBATCH --time=00-01:00:00
<... Remaining constant SBATCH flags ...>


#######################################
# Constants
#######################################
# Array of mappings files paths
readonly mappings=(data/mappings/*.bam)
# Path to reference gene annotations file in GTF format
readonly annotations="data/references/GCF_002263795.3_ARS-UCD2.0_genomic.gtf.gz"
# Path to directory where counts table should be stored
readonly counts_dir="data/counts"
# Path to directory where report should be stored
readonly reports_dir="reports/counts"


#######################################
# Load software
#######################################
# echo to stderr
function errcho {
  >&2 echo "${@}"
}
function featureCounts {
    local image_uri="https://depot.galaxyproject.org/singularity/subread%3A2.0.6--he4a0461_0"
    apptainer exec "${image_uri}" featureCounts "${@}"
}
function multiqc {
    local image_uri=https://depot.galaxyproject.org/singularity/multiqc:1.21--pyhdfd78af_0
    apptainer exec "${image_uri}" multiqc "${@}"
}


#######################################
# Main program
#######################################
# create target directories
mkdir -p "${counts_dir}"

# count reads within genes
featureCounts \
    -T "${SLURM_CPUS_PER_TASK:-1}" \
    -a "${annotations}" \
    -F GTF \
    -o "${counts_dir}/counts_table.txt" \
    "${mappings[@]}"

# run QC for counts
multiqc \
    --filename _counts_qc \
    --outdir "${reports_dir}" \
    --title "Counts QC" \
    "${counts_dir}"
```
